{
  "version": 3,
  "sources": ["pack.ts"],
  "sourcesContent": ["import type {} from './iris'\n\nconst globalDataBufferSize = 64; \nconst exposureHistogramBins = 256;\n\nlet streamedSettingsBuffer: BuiltStreamingBuffer;\n\nexport function setupShader(dimension : NamespacedId) {\n    print(`AYUP ${dimension.getPath()}`);\n\n    // ------------------\n    //   World Settings\n    // ------------------\n\n    worldSettings.disableShade          = true;\n    worldSettings.ambientOcclusionLevel = 0.0;\n    worldSettings.sunPathRotation       = 30.0;\n\n    worldSettings.render.sun            = false;\n    worldSettings.render.moon           = false;\n    worldSettings.render.waterOverlay   = false;\n\n    worldSettings.shadow.resolution     = 1024;\n    worldSettings.shadow.cascades       = 4;\n    worldSettings.shadow.enable()\n\n    setLightColors();\n\n    // ------------\n    //   Textures\n    // ------------\n\n    new RawTexture(\"atmosphere_scattering_lut\", \"data/atmosphere_scattering.dat\")\n        .width(32)\n        .height(64)\n        .depth(32)\n        .format(Format.RGB16F)\n        .type(PixelType.HALF_FLOAT)\n        .blur(true)\n        .clamp(true)\n        .build();\n\n    new RawTexture(\"tony_mcmapface_lut\", \"data/tony_mcmapface_lut_f16.dat\")\n        .width(48)\n        .height(48)\n        .depth(48)\n        .format(Format.RGB16F)\n        .type(PixelType.HALF_FLOAT)\n        .blur(true)\n        .clamp(true)\n        .build();\n\n    let radianceTex = new Texture(\"radiance_tex\")\n        .format(Format.RGB16F)\n        .width(screenWidth)\n        .height(screenHeight)\n        .build();\n\n    let gbufferDataTex = new Texture(\"gbuffer_data_tex\")\n        .format(Format.RGBA16)\n        .width(screenWidth)\n        .height(screenHeight)\n        .build();\n\n    let skyViewTex = new Texture(\"sky_view_tex\")\n        .format(Format.RGB16F)\n        .width(192)\n        .height(108)\n        .build();\n\n    // -----------\n    //   Buffers\n    // -----------\n\n    streamedSettingsBuffer = new StreamingBuffer(4)\n        .build();\n\n    let globalDataBuffer = new GPUBuffer(globalDataBufferSize).build();\n\n    let skyShBuffer = new GPUBuffer(4 * 4 * 9).build();\n\n    let exposureHistogramBuffer = new GPUBuffer(4 * 4 * exposureHistogramBins).build();\n\n    let exposureBuffer = new GPUBuffer(4 * 2).build();\n\n    // ----------\n    //   Macros\n    // ----------\n\n    defineGlobally(\"HISTOGRAM_BINS\", exposureHistogramBins);\n\n    // ----------\n    //   Passes\n    // ----------\n\n    registerShader(\n        new ObjectShader(\"shadow\", Usage.SHADOW)\n            .vertex(\"passes/object/shadow.vsh\")\n            .fragment(\"passes/object/shadow.fsh\")\n            .build()\n    );\n\n    registerShader(\n        new ObjectShader(\"textured\", Usage.TEXTURED)\n            .vertex(\"passes/object/all_solid.vsh\")\n            .fragment(\"passes/object/all_solid.fsh\")\n            .target(0, gbufferDataTex)\n            .build()\n    );\n\n    registerShader(\n        Stage.PRE_RENDER,\n        new Compute(\"fill_global_data_buffer\")\n            .location(\"passes/compute/fill_global_data_buffer.csh\")\n            .workGroups(1, 1, 1)\n            .ssbo(0, globalDataBuffer)\n            .ssbo(1, exposureHistogramBuffer)\n            .build()\n    );\n    registerBarrier(Stage.POST_RENDER, new MemoryBarrier(SSBO_BIT | UBO_BIT));\n\n    registerShader(\n        Stage.PRE_RENDER,\n        new Composite(\"render_sky_view\")\n            .vertex(\"passes/composite.vsh\")\n            .fragment(\"passes/composite/render_sky_view.fsh\")\n            .target(0, skyViewTex)\n            .ubo(0, globalDataBuffer)\n            .build()\n    );\n\n    registerShader(\n        Stage.PRE_RENDER,\n        new Compute(\"gen_sky_sh\")\n            .location(\"passes/compute/gen_sky_sh.csh\")\n            .workGroups(1, 1, 1)\n            .ssbo(0, skyShBuffer)\n            .build()\n    );\n    registerBarrier(Stage.POST_RENDER, new MemoryBarrier(SSBO_BIT | UBO_BIT));\n\n    registerShader(\n        Stage.PRE_TRANSLUCENT,\n        new Composite(\"deferred_shading\")\n            .vertex(\"passes/composite.vsh\")\n            .fragment(\"passes/composite/deferred_shading.fsh\")\n            .target(0, radianceTex)\n            .ubo(0, globalDataBuffer)\n            .ubo(1, skyShBuffer)\n            .build()\n    );\n\n    registerShader(\n        Stage.POST_RENDER,\n        new Compute(\"exposure_build_histogram\")\n            .location(\"passes/compute/exposure_build_histogram.csh\")\n            .workGroups(Math.ceil(screenWidth / 8), Math.ceil(screenHeight / 8), 1)\n            .ssbo(0, exposureHistogramBuffer)\n            .build()\n    );\n    registerBarrier(Stage.POST_RENDER, new MemoryBarrier(SSBO_BIT | UBO_BIT));\n\n    registerShader(\n        Stage.POST_RENDER,\n        new Compute(\"exposure_final\")\n            .location(\"passes/compute/exposure_final.csh\")\n            .workGroups(1, 1, 1)\n            .ssbo(0, exposureBuffer)\n            .ubo(0, exposureHistogramBuffer)\n            .build()\n    );\n    registerBarrier(Stage.POST_RENDER, new MemoryBarrier(SSBO_BIT | UBO_BIT));\n\n    setCombinationPass(\n        new CombinationPass(\"passes/combination.fsh\")\n            .ubo(0, streamedSettingsBuffer)\n            .ubo(1, exposureBuffer)\n            .build()\n    );\n\n    onSettingsChanged();\n}\n\nexport function setupFrame() {\n    streamedSettingsBuffer.uploadData();\n}\n\nexport function onSettingsChanged() {\n    streamedSettingsBuffer.setFloat(0, getFloatSetting(\"EXPOSURE\"));\n}\n\nfunction setLightColors() {\n    setLightColor(new NamespacedId(\"torch\"), 255, 255, 255, 255);\n}\n"],
  "mappings": "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",
  "names": []
}
