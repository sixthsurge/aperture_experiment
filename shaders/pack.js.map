{
  "version": 3,
  "sources": ["script/lightColorsNull.ts", "pack.ts"],
  "sourcesContent": ["/*\n * Block light colours from Null's point shadow sample pack\n * https://github.com/Null-MC/PointShadowSample\n */\n\nfunction hexToRgb(hex: string) {\n    const bigint = parseInt(hex.substring(1), 16);\n    const r = (bigint >> 16) & 255;\n    const g = (bigint >> 8) & 255;\n    const b = bigint & 255;\n    return {r, g, b};\n}\n\nfunction setLightColorEx(hex: string, ...blocks: string[]) {\n    const color = hexToRgb(hex);\n    blocks.forEach(block => setLightColor(new NamespacedId(block), color.r, color.g, color.b, 255));\n}\n\nexport function configureLightColors() {\n    setLightColorEx('#362b21', 'brown_mushroom');\n    setLightColorEx('#f39849', 'campfire');\n    setLightColorEx('#935b2c', 'cave_vines', \"cave_vines_plant\");\n    setLightColorEx('#d39f6d', 'copper_bulb', 'waxed_copper_bulb');\n    setLightColorEx('#d39255', 'exposed_copper_bulb', 'waxed_exposed_copper_bulb');\n    setLightColorEx('#cf833a', 'weathered_copper_bulb', 'waxed_weathered_copper_bulb');\n    setLightColorEx('#87480b', 'oxidized_copper_bulb', 'waxed_oxidized_copper_bulb');\n    setLightColorEx('#7f17a8', 'crying_obsidian', 'respawn_anchor');\n    setLightColorEx('#371559', 'enchanting_table');\n    setLightColorEx('#bea935', 'firefly_bush');\n    setLightColorEx('#5f9889', 'glow_lichen');\n    setLightColorEx('#d3b178', 'glowstone');\n    setLightColorEx('#c2985a', 'jack_o_lantern');\n    setLightColorEx('#f39e49', 'lantern');\n    setLightColorEx('#b8491c', 'lava', 'magma_block');\n    setLightColorEx('#650a5e', 'nether_portal');\n    setLightColorEx('#dfac47', 'ochre_froglight');\n    setLightColorEx('#e075e8', 'pearlescent_froglight');\n    setLightColorEx('#f9321c', 'redstone_torch', 'redstone_wall_torch');\n    setLightColorEx('#e0ba42', 'redstone_lamp');\n    setLightColorEx('#f9321c', 'redstone_ore', 'deepslate_redstone_ore');\n    setLightColorEx('#8bdff8', 'sea_lantern');\n    setLightColorEx('#918f34', 'shroomlight');\n    setLightColorEx('#28aaeb', 'soul_torch', 'soul_wall_torch', 'soul_campfire');\n    setLightColorEx('#f3b549', 'torch', 'wall_torch');\n    setLightColorEx('#6e0000', 'vault');\n    setLightColorEx('#63e53c', 'verdant_froglight');\n\n    setLightColorEx(\"#322638\", \"tinted_glass\");\n    setLightColorEx(\"#ffffff\", \"white_stained_glass\", \"white_stained_glass_pane\");\n    setLightColorEx(\"#999999\", \"light_gray_stained_glass\", \"light_gray_stained_glass_pane\");\n    setLightColorEx(\"#4c4c4c\", \"gray_stained_glass\", \"gray_stained_glass_pane\");\n    setLightColorEx(\"#191919\", \"black_stained_glass\", \"black_stained_glass_pane\");\n    setLightColorEx(\"#664c33\", \"brown_stained_glass\", \"brown_stained_glass_pane\");\n    setLightColorEx(\"#993333\", \"red_stained_glass\", \"red_stained_glass_pane\");\n    setLightColorEx(\"#d87f33\", \"orange_stained_glass\", \"orange_stained_glass_pane\");\n    setLightColorEx(\"#e5e533\", \"yellow_stained_glass\", \"yellow_stained_glass_pane\");\n\n    setLightColorEx(\"#7fcc19\", \"lime_stained_glass\", \"lime_stained_glass_pane\");\n    setLightColorEx(\"#667f33\", \"green_stained_glass\", \"green_stained_glass_pane\");\n    setLightColorEx(\"#4c7f99\", \"cyan_stained_glass\", \"cyan_stained_glass_pane\");\n    setLightColorEx(\"#6699d8\", \"light_blue_stained_glass\", \"light_blue_stained_glass_pane\");\n    setLightColorEx(\"#334cb2\", \"blue_stained_glass\", \"blue_stained_glass_pane\");\n    setLightColorEx(\"#7f3fb2\", \"purple_stained_glass\", \"purple_stained_glass_pane\");\n    setLightColorEx(\"#b24cd8\", \"magenta_stained_glass\", \"magenta_stained_glass_pane\");\n    setLightColorEx(\"#f27fa5\", \"pink_stained_glass\", \"pink_stained_glass_pane\");\n\n    setLightColorEx(\"#c07047\", \"candle\", \"white_candle\", \"light_gray_candle\", \"gray_candle\", \"black_candle\",\n        \"brown_candle\", \"red_candle\", \"orange_candle\", \"yellow_candle\", \"lime_candle\", \"green_candle\", \"cyan_candle\",\n        \"light_blue_candle\", \"blue_candle\", \"purple_candle\", \"magenta_candle\", \"pink_candle\");\n}\n", "import type {} from './iris'\nimport {configureLightColors} from './script/lightColorsNull.ts'\n\nconst globalDataBufferSize = 64; \n\nconst exposureHistogramBins = 256;\nconst exposureHistogramPixelsPerThreadX = 2;\nconst exposureHistogramPixelsPerThreadY = 2;\n\nlet streamedSettingsBuffer: BuiltStreamingBuffer;\n\nexport function configureRenderer(renderer: RendererConfig) {\n    renderer.disableShade          = true;\n    renderer.ambientOcclusionLevel = 0.0;\n    renderer.sunPathRotation       = 30.0;\n\n    renderer.render.sun            = false;\n    renderer.render.moon           = false;\n    renderer.render.waterOverlay   = false;\n\n    renderer.shadow.enabled        = true;\n    renderer.shadow.resolution     = 1024;\n    renderer.shadow.cascades       = 4;\n\n    let pointLightsEnabled = getBoolSetting(\"POINT_SHADOW\");\n    if (pointLightsEnabled) {\n        renderer.pointLight.maxCount             = getIntSetting(\"POINT_SHADOW_MAX_COUNT\");\n        renderer.pointLight.resolution           = getIntSetting(\"POINT_SHADOW_RESOLUTION\");\n        renderer.pointLight.nearPlane            = 0.1;\n        renderer.pointLight.farPlane             = 16.0;\n        renderer.pointLight.cacheRealTimeTerrain = true;\n    }\n}\n\nexport function configurePipeline(pipeline: PipelineConfig) {\n    configureLightColors();\n\n    // ------------\n    //   Settings\n    // ------------\n\n    let pointLightsEnabled = getBoolSetting(\"POINT_SHADOW\");\n\n    // ------------\n    //   Textures\n    // ------------\n\n    new RawTexture(\"atmosphere_scattering_lut\", \"data/atmosphere_scattering.dat\")\n        .width(32)\n        .height(64)\n        .depth(32)\n        .format(Format.RGB16F)\n        .type(PixelType.HALF_FLOAT)\n        .blur(true)\n        .clamp(true)\n        .build();\n\n    new RawTexture(\"tony_mcmapface_lut\", \"data/tony_mcmapface_lut_f16.dat\")\n        .width(48)\n        .height(48)\n        .depth(48)\n        .format(Format.RGB16F)\n        .type(PixelType.HALF_FLOAT)\n        .blur(true)\n        .clamp(true)\n        .build();\n\n    let radianceTex = new Texture(\"radiance_tex\")\n        .format(Format.RGBA16F)\n        .width(screenWidth)\n        .height(screenHeight)\n        .build();\n\n    let gbufferDataTex = new Texture(\"gbuffer_data_tex\")\n        .format(Format.RGBA16)\n        .width(screenWidth)\n        .height(screenHeight)\n        .build();\n\n    let skyViewTex = new Texture(\"sky_view_tex\")\n        .format(Format.RGB16F)\n        .width(192)\n        .height(108)\n        .build();\n\n    // -----------\n    //   Buffers\n    // -----------\n\n    streamedSettingsBuffer = new StreamingBuffer(4)\n        .build();\n\n    let globalDataBuffer = new GPUBuffer(globalDataBufferSize).build();\n\n    let skyShBuffer = new GPUBuffer(4 * 4 * 9).build();\n\n    let exposureHistogramBuffer = new GPUBuffer(4 * 4 * exposureHistogramBins).build();\n\n    let exposureBuffer = new GPUBuffer(4 * 2).build();\n\n    // ----------\n    //   Macros\n    // ----------\n\n    if (pointLightsEnabled) {\n        defineGlobally(\"POINT_SHADOW\", \"1\");\n    }\n\n    defineGlobally(\"HISTOGRAM_BINS\", exposureHistogramBins);\n\n    // ------------\n    //   Programs\n    // ------------\n\n    pipeline.registerObjectShader(\n        new ObjectShader(\"shadow\", Usage.SHADOW)\n            .vertex(\"program/object/shadow.vsh\")\n            .fragment(\"program/object/shadow.fsh\")\n            .build()\n    );\n\n    if (pointLightsEnabled) {\n        pipeline.registerObjectShader(\n            new ObjectShader(\"shadow_point\", Usage.POINT)\n                .vertex(\"program/object/shadow_point.vsh\")\n                .fragment(\"program/object/shadow_point.fsh\")\n                .build()\n        );\n    }\n\n    const solidPrograms: [ProgramUsage, string, string][] = [\n        [Usage.TERRAIN_SOLID, \"terrain_solid\", \"OBJECT_TERRAIN_SOLID\"],\n        [Usage.TERRAIN_CUTOUT, \"terrain_cutout\", \"OBJECT_TERRAIN_CUTOUT\"],\n    ];\n\n    for (const [usage, name, macro] of solidPrograms) {\n        pipeline.registerObjectShader(\n            new ObjectShader(name, usage)\n                .vertex(\"program/object/all_solid.vsh\")\n                .fragment(\"program/object/all_solid.fsh\")\n                .target(0, gbufferDataTex)\n                .define(macro, \"1\")\n                .build()\n        );\n    }\n\n    pipeline.registerPostPass(\n        Stage.PRE_RENDER,\n        new Compute(\"fill_global_data_buffer\")\n            .location(\"program/pre_render/fill_global_data_buffer.csh\")\n            .workGroups(1, 1, 1)\n            .ssbo(0, globalDataBuffer)\n            .ssbo(1, exposureHistogramBuffer)\n            .build()\n    );\n    pipeline.addBarrier(Stage.PRE_RENDER, SSBO_BIT | UBO_BIT)\n\n    pipeline.registerPostPass(\n        Stage.PRE_RENDER,\n        new Composite(\"render_sky_view\")\n            .vertex(\"program/composite.vsh\")\n            .fragment(\"program/pre_render/render_sky_view.fsh\")\n            .target(0, skyViewTex)\n            .ubo(0, globalDataBuffer)\n            .build()\n    );\n\n    pipeline.registerPostPass(\n        Stage.PRE_RENDER,\n        new Compute(\"gen_sky_sh\")\n            .location(\"program/pre_render/gen_sky_sh.csh\")\n            .workGroups(1, 1, 1)\n            .ssbo(0, skyShBuffer)\n            .build()\n    );\n    pipeline.addBarrier(Stage.PRE_RENDER, SSBO_BIT | UBO_BIT)\n\n    pipeline.registerPostPass(\n        Stage.PRE_TRANSLUCENT,\n        new Composite(\"deferred_shading\")\n            .vertex(\"program/composite.vsh\")\n            .fragment(\"program/pre_translucent/deferred_shading.fsh\")\n            .target(0, radianceTex)\n            .ubo(0, globalDataBuffer)\n            .ubo(1, skyShBuffer)\n            .build()\n    );\n\n    pipeline.registerPostPass(\n        Stage.POST_RENDER,\n        new Compute(\"exposure_build_histogram\")\n            .location(\"program/post_render/exposure_build_histogram.csh\")\n            .workGroups(\n                Math.ceil(screenWidth / (16 * exposureHistogramPixelsPerThreadX)), \n                Math.ceil(screenHeight / (16 * exposureHistogramPixelsPerThreadY)), \n                1\n            )\n            .ssbo(0, exposureHistogramBuffer)\n            .define(\"PIXELS_PER_THREAD_X\", exposureHistogramPixelsPerThreadX.toString())\n            .define(\"PIXELS_PER_THREAD_Y\", exposureHistogramPixelsPerThreadY.toString())\n            .build()\n    );\n    pipeline.addBarrier(Stage.POST_RENDER, SSBO_BIT | UBO_BIT)\n\n    pipeline.registerPostPass(\n        Stage.POST_RENDER,\n        new Compute(\"exposure_final\")\n            .location(\"program/post_render/exposure_final.csh\")\n            .workGroups(1, 1, 1)\n            .ssbo(0, exposureBuffer)\n            .ubo(0, exposureHistogramBuffer)\n            .build()\n    );\n    pipeline.addBarrier(Stage.POST_RENDER, SSBO_BIT | UBO_BIT)\n\n    pipeline.setCombinationPass(\n        new CombinationPass(\"program/combination.fsh\")\n            .ubo(0, streamedSettingsBuffer)\n            .ubo(1, exposureBuffer)\n            .build()\n    );\n\n    onSettingsChanged();\n}\n\nexport function beginFrame() {\n    streamedSettingsBuffer.uploadData();\n}\n\nexport function onSettingsChanged() {\n    streamedSettingsBuffer.setFloat(0, getFloatSetting(\"EXPOSURE\"));\n}\n"],
  "mappings": "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",
  "names": []
}
